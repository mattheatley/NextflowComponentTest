
/* process settings */

    process {

        /* global process settings */

            fair           = true

            maxRetries     = 3
	        penv           = "mt"
            cpus           = { check_max( 2    * task.attempt, 'cpus'   ) }
            memory         = { check_max( 4.GB * task.attempt, 'memory' ) }
            time           = { check_max( 6.h  * task.attempt, 'time'   ) }
            queue          = 'all.q'
	        clusterOptions = "-P applications"
	        clusterOptions+= " -l gpu=0"

            afterScript = {

                assert task.tag: "Task tag not defined; ${task.process}"

                logDir = "${workflow.launchDir}/${params.logDir}/tasks"
                logDir+= "/${task.process.replace(':','.')}/${task.tag}"
                
                afterCommand = """

                mkdir -p ${logDir}
                
                for LOG in .command*; do
                
                    TASKLOG="${logDir}/${task.tag}.\${LOG##*.}"
                    cp -a \$LOG \$TASKLOG
                
                done
                
                """
                
                return afterCommand
                
                }

/*
logMainDir = params.publishDir

// Build log directory path based on task name
logSubDir = task.name.replace(" (null)", "").replace(" ", "/").replaceAll(" ", "_").replaceAll("[()]", "")
logDir = logMainDir + "/" + logSubDir

// Define command to copy log files 
cpLogCmd = "mkdir -p ${logDir}; cp -a *.txt ${logDir}; "

// Assemble final command
cmd = "ls -alR --full-time > .command.ls; "
cmd += "mkdir nxf_log; "
cmd += "for file in .command.*; do cp -a \${file} nxf_log/\${file#.}.txt; done; "
cmd += "cd nxf_log; "
cmd += cpLogCmd
cmd += "cd ..;"
cmd
*/



        /* individual process settings */

         // withName: PROCESS1 {
         // container      = 'URL/image_name'
         // cpus           = N
         // memory         = N.GB
         // time           = N.h
         // queue          = 'NAME'
         // clusterOptions+= ''
            // }

    }
